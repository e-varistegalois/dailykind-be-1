// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ChatSession{
  id            String   @id @default(uuid())
  userId        String   @map("user_id")
  personality   String  
  createdAt     DateTime @default(now()) @map("created_at")
  history       Json     @db.JsonB

  @@map("chat_session")
}

model Challenge {
  id         String   @id @default(cuid())
  content    String
  timestamp  DateTime
  isActive   Boolean  @default(true)

  posts      Post[]   // relasi ke Post
}

model Post {
  id           String   @id @default(cuid())
  challengeId  String
  userId       String
  content      String
  createdAt    DateTime @default(now())
  likes        Like[]   // relasi ke Like
  likesCount   Int      @default(0) // cache

  challenge    Challenge @relation(fields: [challengeId], references: [id])

  @@unique([challengeId, userId]) // user hanya bisa post 1x per challenge
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  createdAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id])
  
  @@unique([userId, postId]) // user hanya bisa like 1x untuk 1 post
}
